// <auto-generated />
using System;
using CrudOperationEFCodeFirst0502.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudOperationEFCodeFirst0502.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210206131026_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", b =>
                {
                    b.Property<int>("BusinessEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginID")
                        .HasColumnType("int");

                    b.Property<int>("NationalIDNumber")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationLevel")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("BusinessEntityID");

                    b.HasIndex("PersonID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.EmployeeDepartment", b =>
                {
                    b.Property<int>("EmployeeDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessEntityID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeBusinessEntityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndStateDocument")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateDocument")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeDepartmentID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeBusinessEntityID");

                    b.HasIndex("ShiftID");

                    b.ToTable("EmployeeDepartment");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.EmployeePayHistory", b =>
                {
                    b.Property<int>("EmployeePayHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeBusinessEntityID")
                        .HasColumnType("int");

                    b.Property<int>("PayFrequency")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("RateChangeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeePayHistoryId");

                    b.HasIndex("EmployeeBusinessEntityID");

                    b.ToTable("EmployeePayHistory");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.JobCandidate", b =>
                {
                    b.Property<int>("JobCandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeBusinessEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobCandidateID");

                    b.HasIndex("EmployeeBusinessEntityID");

                    b.ToTable("JobCandidate");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Shift", b =>
                {
                    b.Property<int>("ShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftID");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.Pers.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.Sales.SalesPerson", b =>
                {
                    b.Property<int>("SalesPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessEntitiID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeBusinessEntityID")
                        .HasColumnType("int");

                    b.Property<int>("SalesQuota")
                        .HasColumnType("int");

                    b.HasKey("SalesPersonID");

                    b.HasIndex("EmployeeBusinessEntityID");

                    b.ToTable("SalesPerson");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", b =>
                {
                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.Pers.Person", "Person")
                        .WithMany("Employees")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.EmployeeDepartment", b =>
                {
                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Department", "Department")
                        .WithMany("EmployeeDepartments")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", "Employee")
                        .WithMany("EmployeeDepartments")
                        .HasForeignKey("EmployeeBusinessEntityID");

                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Shift", "Shift")
                        .WithMany("EmployeeDepartments")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.EmployeePayHistory", b =>
                {
                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", "Employee")
                        .WithMany("EmployeePayHistories")
                        .HasForeignKey("EmployeeBusinessEntityID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.JobCandidate", b =>
                {
                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", "Employee")
                        .WithMany("JobCandidates")
                        .HasForeignKey("EmployeeBusinessEntityID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.Sales.SalesPerson", b =>
                {
                    b.HasOne("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", "Employee")
                        .WithMany("SalesPersons")
                        .HasForeignKey("EmployeeBusinessEntityID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Department", b =>
                {
                    b.Navigation("EmployeeDepartments");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Employee", b =>
                {
                    b.Navigation("EmployeeDepartments");

                    b.Navigation("EmployeePayHistories");

                    b.Navigation("JobCandidates");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.HumanResources.Shift", b =>
                {
                    b.Navigation("EmployeeDepartments");
                });

            modelBuilder.Entity("CrudOperationEFCodeFirst0502.Entities.Pers.Person", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
